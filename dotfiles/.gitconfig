[alias]
  c = commit -am
  up = pull
  p = push
  s = status -s
  df = diff --color --color-words --abbrev
  g = gui
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  co = checkout
  a = add -A .
  undopush = push -f origin HEAD^:master
  alias = config --get-regexp alias

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # Merge GitHub pull request on top of the `master` branch
  mpr = "!f() { \
    if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
      git fetch origin refs/pull/$1/head:pr/$1 && \
      git rebase master pr/$1 && \
      git checkout master && \
      git merge pr/$1 && \
      git branch -D pr/$1 && \
      git commit --amend -m \"$(git log -1 --pretty=%B)\n\nCloses #$1.\"; \
    fi \
  }; f"

[color]
  ui = auto

[core]
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[merge]
    tool = meld

# rewrites
# icoloma: Is this still necessary? I don't think so
# [url "git@github.com:"]
#   insteadOf = "gh:"
#   insteadOf = "git://github.com"
#   pushInsteadOf = "github:"
#   pushInsteadOf = "git://github.com/"
#     pushInsteadOf = "https://github.com/"
# [url "git@gist.github.com:"]
#   insteadOf = "gst:"
#   pushInsteadOf = "gist:"
#   pushInsteadOf = "git://gist.github.com/"
#   pushInsteadOf = "https://gist.github.com/"

[help]
  autocorrect = 1

# push easily. http://stackoverflow.com/a/23918418/89484
# [push]
#   default = current

[include]
  # For username / github token / etc
  path = ~/.gitconfig.local
[push]
	default = simple
[user]
	name = Nacho Coloma
	email = icoloma@gmail.com

# remove locally branches that have been deleted in origin
[fetch]
  prune = true

# new branches are set to automatically track origin
[branch]
	autosetupmerge = always

[diff]
  tool = default-difftool
[difftool "default-difftool"]
  cmd = code --wait --diff $LOCAL $REMOTE